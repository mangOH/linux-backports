From 312f6532741c65c162c87128c481cefd3d8a65c7 Mon Sep 17 00:00:00 2001
From: David Frey <dfrey@sierrawireless.com>
Date: Thu, 12 Dec 2019 15:15:35 -0800
Subject: [PATCH] *_sock_accept functions prior to 4.11 didn't take the final
 "bool kern" parameter

---
 net/bluetooth/l2cap_sock.c  | 5 +++++
 net/bluetooth/rfcomm/sock.c | 5 +++++
 net/bluetooth/sco.c         | 5 +++++
 3 files changed, 15 insertions(+)

diff --git a/net/bluetooth/l2cap_sock.c b/net/bluetooth/l2cap_sock.c
index 38e8ac57fa36..324cd0ce3c96 100644
--- a/net/bluetooth/l2cap_sock.c
+++ b/net/bluetooth/l2cap_sock.c
@@ -301,8 +301,13 @@ static int l2cap_sock_listen(struct socket *sock, int backlog)
 	return err;
 }
 
+#if LINUX_VERSION_IS_GEQ(4,11,0)
 static int l2cap_sock_accept(struct socket *sock, struct socket *newsock,
 			     int flags, bool kern)
+#else
+static int l2cap_sock_accept(struct socket *sock, struct socket *newsock,
+			     int flags)
+#endif
 {
 	DEFINE_WAIT_FUNC(wait, woken_wake_function);
 	struct sock *sk = sock->sk, *nsk;
diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 2e028c47224f..287890ea8eca 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -476,8 +476,13 @@ static int rfcomm_sock_listen(struct socket *sock, int backlog)
 	return err;
 }
 
+#if LINUX_VERSION_IS_GEQ(4,11,0)
 static int rfcomm_sock_accept(struct socket *sock, struct socket *newsock, int flags,
 			      bool kern)
+#else
+static int rfcomm_sock_accept(struct socket *sock, struct socket *newsock,
+			      int flags)
+#endif
 {
 	DEFINE_WAIT_FUNC(wait, woken_wake_function);
 	struct sock *sk = sock->sk, *nsk;
diff --git a/net/bluetooth/sco.c b/net/bluetooth/sco.c
index 81fe3949c158..a47390df491b 100644
--- a/net/bluetooth/sco.c
+++ b/net/bluetooth/sco.c
@@ -625,8 +625,13 @@ static int sco_sock_listen(struct socket *sock, int backlog)
 	return err;
 }
 
+#if LINUX_VERSION_IS_GEQ(4,11,0)
 static int sco_sock_accept(struct socket *sock, struct socket *newsock,
 			   int flags, bool kern)
+#else
+static int sco_sock_accept(struct socket *sock, struct socket *newsock,
+			   int flags)
+#endif
 {
 	DEFINE_WAIT_FUNC(wait, woken_wake_function);
 	struct sock *sk = sock->sk, *ch;
-- 
2.24.0

