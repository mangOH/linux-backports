diff --git a/drivers/bluetooth/hci_intel.c b/drivers/bluetooth/hci_intel.c
index c5886031c6d8..aba8a65ca609 100644
--- a/drivers/bluetooth/hci_intel.c
+++ b/drivers/bluetooth/hci_intel.c
@@ -29,7 +29,9 @@
 #include <linux/wait.h>
 #include <linux/tty.h>
 #include <linux/platform_device.h>
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 #include <linux/gpio/consumer.h>
+#endif
 #include <linux/acpi.h>
 #include <linux/interrupt.h>
 #include <linux/pm_runtime.h>
@@ -381,7 +383,9 @@ static int intel_set_power(struct hci_uart *hu, bool powered)
 		BT_INFO("hu %p, Switching compatible pm device (%s) to %u",
 			hu, dev_name(&idev->pdev->dev), powered);
 
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 		gpiod_set_value(idev->reset, powered);
+#endif
 
 		/* Provide to idev a hu reference which is used to run LPM
 		 * transactions (lpm suspend/resume) from PM callbacks.
@@ -1326,13 +1330,16 @@ static int intel_probe(struct platform_device *pdev)
 	if (ret)
 		dev_dbg(&pdev->dev, "Unable to add GPIO mapping table\n");
 
+#if LINUX_VERSION_IS_GEQ(3,17,0)
 	idev->reset = devm_gpiod_get(&pdev->dev, "reset", GPIOD_OUT_LOW);
 	if (IS_ERR(idev->reset)) {
 		dev_err(&pdev->dev, "Unable to retrieve gpio\n");
 		return PTR_ERR(idev->reset);
 	}
+#endif
 
 	idev->irq = platform_get_irq(pdev, 0);
+#if LINUX_VERSION_IS_GEQ(3,17,0)
 	if (idev->irq < 0) {
 		struct gpio_desc *host_wake;
 
@@ -1350,12 +1357,15 @@ static int intel_probe(struct platform_device *pdev)
 			goto no_irq;
 		}
 	}
+#endif
 
 	/* Only enable wake-up/irq when controller is powered */
 	device_set_wakeup_capable(&pdev->dev, true);
 	device_wakeup_disable(&pdev->dev);
 
+#if LINUX_VERSION_IS_GEQ(3,17,0)
 no_irq:
+#endif
 	platform_set_drvdata(pdev, idev);
 
 	/* Place this instance on the device list */
@@ -1363,8 +1373,10 @@ static int intel_probe(struct platform_device *pdev)
 	list_add_tail(&idev->list, &intel_device_list);
 	mutex_unlock(&intel_device_list_lock);
 
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 	dev_info(&pdev->dev, "registered, gpio(%d)/irq(%d).\n",
 		 desc_to_gpio(idev->reset), idev->irq);
+#endif
 
 	return 0;
 }
