diff --git a/drivers/bluetooth/hci_bcm.c b/drivers/bluetooth/hci_bcm.c
index 32527bdf4b50..7e3a3d365b02 100644
--- a/drivers/bluetooth/hci_bcm.c
+++ b/drivers/bluetooth/hci_bcm.c
@@ -31,7 +31,9 @@
 #include <linux/property.h>
 #include <linux/platform_device.h>
 #include <linux/clk.h>
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 #include <linux/gpio/consumer.h>
+#endif
 #include <linux/tty.h>
 #include <linux/interrupt.h>
 #include <linux/dmi.h>
@@ -170,8 +172,10 @@ static int bcm_gpio_set_power(struct bcm_device *dev, bool powered)
 	if (powered && !IS_ERR(dev->clk) && !dev->clk_enabled)
 		clk_prepare_enable(dev->clk);
 
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 	gpiod_set_value(dev->shutdown, powered);
 	gpiod_set_value(dev->device_wakeup, powered);
+#endif
 
 	if (!powered && !IS_ERR(dev->clk) && dev->clk_enabled)
 		clk_disable_unprepare(dev->clk);
@@ -571,7 +575,9 @@ static int bcm_suspend_device(struct device *dev)
 
 	/* Suspend the device */
 	if (bdev->device_wakeup) {
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 		gpiod_set_value(bdev->device_wakeup, false);
+#endif
 		bt_dev_dbg(bdev, "suspend, delaying 15 ms");
 		mdelay(15);
 	}
@@ -586,7 +592,9 @@ static int bcm_resume_device(struct device *dev)
 	bt_dev_dbg(bdev, "");
 
 	if (bdev->device_wakeup) {
+#if LINUX_VERSION_IS_GEQ(3,13,0)
 		gpiod_set_value(bdev->device_wakeup, true);
+#endif
 		bt_dev_dbg(bdev, "resume, delaying 15 ms");
 		mdelay(15);
 	}
@@ -669,6 +677,7 @@ static int bcm_resume(struct device *dev)
 }
 #endif
 
+#if defined(CONFIG_ACPI) && LINUX_VERSION_IS_GEQ(3,19,0)
 static const struct acpi_gpio_params int_last_device_wakeup_gpios = { 0, 0, false };
 static const struct acpi_gpio_params int_last_shutdown_gpios = { 1, 0, false };
 static const struct acpi_gpio_params int_last_host_wakeup_gpios = { 2, 0, false };
@@ -691,7 +700,6 @@ static const struct acpi_gpio_mapping acpi_bcm_int_first_gpios[] = {
 	{ },
 };
 
-#ifdef CONFIG_ACPI
 /* IRQ polarity of some chipsets are not defined correctly in ACPI table. */
 static const struct dmi_system_id bcm_active_low_irq_dmi_table[] = {
 	{	/* Handle ThinkPad 8 tablets with BCM2E55 chipset ACPI ID */
@@ -893,7 +901,7 @@ static const struct hci_uart_proto bcm_proto = {
 	.dequeue	= bcm_dequeue,
 };
 
-#ifdef CONFIG_ACPI
+#if defined(CONFIG_ACPI) && LINUX_VERSION_IS_GEQ(3,19,0)
 static const struct acpi_device_id bcm_acpi_match[] = {
 	{ "BCM2E1A", (kernel_ulong_t)&acpi_bcm_int_last_gpios },
 	{ "BCM2E39", (kernel_ulong_t)&acpi_bcm_int_last_gpios },
@@ -927,7 +935,9 @@ static struct platform_driver bcm_driver = {
 	.remove = bcm_remove,
 	.driver = {
 		.name = "hci_bcm",
+#if LINUX_VERSION_IS_GEQ(3,19,0)
 		.acpi_match_table = ACPI_PTR(bcm_acpi_match),
+#endif
 		.pm = &bcm_pm_ops,
 	},
 };
